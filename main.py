
# Алгоритм проверки строки на палиндром
# Предобработка строки:

# 1. Преобразовать строку к одному регистру (например, к нижнему).
# 2. Удалить из строки все неалфавитные символы (например, пробелы, знаки пунктуации).
# 3. Проверка на палиндром:
#    - Сравнить строку с её перевернутым вариантом.
#    - Если они одинаковы, строка является палиндромом.
#    - Если нет, строка не является палиндромом.

import re

def is_palindrome(s):
    # Преобразовать строку к нижнему регистру
    s = s.lower()
    # Удалить все неалфавитные символы
    s = re.sub(r'[^a-z]', '', s)
    # Сравнить строку с её перевернутым вариантом
    return s == s[::-1]

# Тестирование функции
def test_is_palindrome():
    assert is_palindrome("A man, a plan, a canal, Panama") == True, "Тест 1 не пройден"
    assert is_palindrome("racecar") == True, "Тест 2 не пройден"
    assert is_palindrome("hello") == False, "Тест 3 не пройден"
    assert is_palindrome("Was it a car or a cat I saw") == True, "Тест 4 не пройден"
    assert is_palindrome("No 'x' in Nixon") == True, "Тест 5 не пройден"
    print("Все тесты пройдены")

# Запуск тестов
test_is_palindrome()
